// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<WriteReviewLink> should not render when current product is empty 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(WriteReviewLink)>
    <WriteReviewLink
      dispatch={[Function]}
      productId={null}
    />
  </Connect(WriteReviewLink)>
</Provider>
`;

exports[`<WriteReviewLink> should render when current product is set 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(WriteReviewLink)>
    <WriteReviewLink
      dispatch={[Function]}
      productId="foo"
    >
      <ButtonLink
        href="/item/666f6f/write_review"
        noGap={true}
      >
        <ActionButton
          className=""
          disabled={false}
          flat={true}
          loading={false}
          noGap={true}
          onClick={[Function]}
          rippleClassName=""
          rippleSize={null}
          type="secondary"
          wrapContent={true}
        >
          <div
            className="css-1yv2jt6"
          >
            <RippleButton
              className=""
              disabled={false}
              flat={true}
              onClick={[Function]}
              rippleClassName=""
              rippleSize={null}
              type="secondary"
              wrapContent={true}
            >
              <Button
                className=""
                disabled={false}
                flat={true}
                onClick={[Function]}
                type="secondary"
                wrapContent={false}
              >
                <Button
                  className="css-dh0pju "
                  disabled={false}
                  onClick={[Function]}
                >
                  <button
                    className="css-dh0pju  css-1rn65c0"
                    data-test-id="Button"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <Ripple
                      className="css-8s1fw2 "
                      color="#000"
                      disabled={false}
                      fill={true}
                      onComplete={[Function]}
                      overflow={false}
                      size={null}
                    >
                      <div
                        aria-hidden={true}
                        className="css-8s1fw2 "
                        data-test-id="Ripple"
                        onClick={[Function]}
                        style={null}
                      >
                        <Translate
                          className=""
                          params={Object {}}
                          string="reviews.button_add"
                        >
                          <span
                            className=""
                          >
                            reviews.button_add
                          </span>
                        </Translate>
                      </div>
                    </Ripple>
                  </button>
                </Button>
              </Button>
            </RippleButton>
          </div>
        </ActionButton>
      </ButtonLink>
    </WriteReviewLink>
  </Connect(WriteReviewLink)>
</Provider>
`;
